
import streamlit as st
import pandas as pd
from sklearn import datasets
from sklearn.ensemble import RandomForestRegressor


#List of features to use in func

role_list = ['Data Analyst', 'Data Scientist', 'Data Engineer', 'Other']
gender_list = ['Man', 'Woman', 'Other']
age_list = ['18-21', '22-24', '25-29', '30-34', '35-39', '40-44', '45-49', '50-54', '55-59', '60-69']
country_list = ['Russia', 'UK', 'Spain', 'Germany', 'France', 'Italy', 'Poland', 'Netherlands', 'Ukraine', 'Portugal', 'Greece', 'Ireland', 'Sweden', 'Sweden', 'Switzerland', 'Belgium', 'Romania', 'Czech Republic', 'Denmark', 'Austria', 'Belarus']
education_list = ['High School', 'Some college', 'Bachelor’s degree', 'Master’s degree', 'Doctoral degree', 'Professional doctorate']
experience_ml_list = ['Under 1 year', '1-2 years', '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-20 years', '20 or more years']


def user_input_features():
    
    role = st.sidebar.selectbox('Select your role', role_list, 0)
    gender = st.sidebar.selectbox('Select your gender', gender_list, 0)
    age = st.sidebar.selectbox('Select your age', age_list, 0)
    country = st.sidebar.selectbox('Select your country', country_list, 0)
    education= st.sidebar.selectbox('Select your highest level of education', education_list, 0)
    experience = st.sidebar.selectbox('Select the years of experience in Machine Learning', experience_ml_list, 0)
    #industry_list = st.sidebar.selectbox('Select the industry of your comapny', industry_list, 0)


    data = {'role': role,
            'gender': gender,
            'age': age,
            'country': country,
            'education': education,
            'experience': experience}
            #'industry', industry
    features = pd.DataFrame(data, index=[0])
    return features


'''


def load_data():
    """
    Function to load the data
    
    """

    df1 = pd.read_csv("df_model_eu", index_col=0)

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)
    return X_train,y_train

    
def encoding (df):
    #your code
    return  the user input encoded


def model(df,x,y):
    """
    Function fit a Random Forest Model
    Args: 
        df: dataframe with the users parameters
        x: the predictors
        y: the response variable (kind of species)
    Returns:
        pred: which species did you see in the field
        pred_proba: the probability of such a prediction
    """
    df_encoded = encoding(df)
    clf = RandomForestRegressor(#parameters)
    clf.fit(x, y)
    
    prediction = int(clf.predict(df))

    return prediction
  
'''

